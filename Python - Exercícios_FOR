{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNxvoE2NjFvYe812fWxsLko",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Fabiana-Rodrigues/Primeiro_Repositorio/blob/main/Python%20-%20Exerc%C3%ADcios_FOR\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZUyxW7t5ZEHc",
        "outputId": "aab22587-90ec-428b-95fb-4683bec87944"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n",
            "11\n",
            "12\n",
            "13\n",
            "14\n",
            "15\n",
            "16\n",
            "17\n",
            "18\n",
            "19\n",
            "20\n"
          ]
        }
      ],
      "source": [
        "# 1. Contagem Progressiva\n",
        "# Escreva um programa que exiba os números de 1 a 20 na tela.\n",
        "\n",
        "for i in range (1,21):\n",
        "  print (i)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2. Números Pares\n",
        "# Mostre todos os números pares de 1 a 50.\n",
        "\n",
        "for j in range (1,51,2):\n",
        "  par = j+1\n",
        "  print(par)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XLle5rwqZ5h0",
        "outputId": "6beddce3-3489-41c6-9758-56a2fd228f3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "4\n",
            "6\n",
            "8\n",
            "10\n",
            "12\n",
            "14\n",
            "16\n",
            "18\n",
            "20\n",
            "22\n",
            "24\n",
            "26\n",
            "28\n",
            "30\n",
            "32\n",
            "34\n",
            "36\n",
            "38\n",
            "40\n",
            "42\n",
            "44\n",
            "46\n",
            "48\n",
            "50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3. Tabuada\n",
        "# Peça para o usuário digitar um número e exiba a sua tabuada de 1 a 10.\n",
        "\n",
        "tabuada = int(input(\"Digite um número: \"))\n",
        "\n",
        "for n in range (1,11):\n",
        " print(f\"{n} x {tabuada} = {tabuada*n}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "82I_Z-rFapSL",
        "outputId": "2d27813f-d47b-4a74-b039-0b8e0501d6bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 6\n",
            "1 x 6 = 6\n",
            "2 x 6 = 12\n",
            "3 x 6 = 18\n",
            "4 x 6 = 24\n",
            "5 x 6 = 30\n",
            "6 x 6 = 36\n",
            "7 x 6 = 42\n",
            "8 x 6 = 48\n",
            "9 x 6 = 54\n",
            "10 x 6 = 60\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4. Soma de Números\n",
        "# Calcule a soma de todos os números de 1 a 100 e exiba o resultado.\n",
        "\n",
        "soma = 0\n",
        "\n",
        "for i in range (1,101):\n",
        "  soma +=i\n",
        "  print(soma)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r4iIYziYcqMW",
        "outputId": "3002d0b8-2fd8-4e23-c452-2f17a98fe05f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "3\n",
            "6\n",
            "10\n",
            "15\n",
            "21\n",
            "28\n",
            "36\n",
            "45\n",
            "55\n",
            "66\n",
            "78\n",
            "91\n",
            "105\n",
            "120\n",
            "136\n",
            "153\n",
            "171\n",
            "190\n",
            "210\n",
            "231\n",
            "253\n",
            "276\n",
            "300\n",
            "325\n",
            "351\n",
            "378\n",
            "406\n",
            "435\n",
            "465\n",
            "496\n",
            "528\n",
            "561\n",
            "595\n",
            "630\n",
            "666\n",
            "703\n",
            "741\n",
            "780\n",
            "820\n",
            "861\n",
            "903\n",
            "946\n",
            "990\n",
            "1035\n",
            "1081\n",
            "1128\n",
            "1176\n",
            "1225\n",
            "1275\n",
            "1326\n",
            "1378\n",
            "1431\n",
            "1485\n",
            "1540\n",
            "1596\n",
            "1653\n",
            "1711\n",
            "1770\n",
            "1830\n",
            "1891\n",
            "1953\n",
            "2016\n",
            "2080\n",
            "2145\n",
            "2211\n",
            "2278\n",
            "2346\n",
            "2415\n",
            "2485\n",
            "2556\n",
            "2628\n",
            "2701\n",
            "2775\n",
            "2850\n",
            "2926\n",
            "3003\n",
            "3081\n",
            "3160\n",
            "3240\n",
            "3321\n",
            "3403\n",
            "3486\n",
            "3570\n",
            "3655\n",
            "3741\n",
            "3828\n",
            "3916\n",
            "4005\n",
            "4095\n",
            "4186\n",
            "4278\n",
            "4371\n",
            "4465\n",
            "4560\n",
            "4656\n",
            "4753\n",
            "4851\n",
            "4950\n",
            "5050\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 5. Média de Valores\n",
        "# Solicite que o usuário digite 5 números e exiba a média aritmética deles.\n",
        "\n",
        "soma = 0\n",
        "\n",
        "for i in range(5):\n",
        "    num = float(input(\"Digite um número: \"))\n",
        "    print(f\"Você digitou o número: {num}\")\n",
        "    soma += num\n",
        "\n",
        "media = soma / 5\n",
        "print(f\"A média dos números digitados é: {media}\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "18z7Z7QZbmpZ",
        "outputId": "1696890a-5e43-42a6-e08f-830ec6585010"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 5\n",
            "Você digitou o número: 5.0\n",
            "Digite um número: 6\n",
            "Você digitou o número: 6.0\n",
            "Digite um número: 8\n",
            "Você digitou o número: 8.0\n",
            "Digite um número: 4\n",
            "Você digitou o número: 4.0\n",
            "Digite um número: 9\n",
            "Você digitou o número: 9.0\n",
            "A média aritmética dos números digitados é: 6.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 6. Múltiplos de 3\n",
        "# Mostre todos os números que são múltiplos de 3 até 30.\n",
        "\n",
        "for k in range (3, 31, 3):\n",
        "  print(k)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eixi1y6zikf-",
        "outputId": "0345fc8a-7c18-45d3-acc5-15b885040b6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3\n",
            "6\n",
            "9\n",
            "12\n",
            "15\n",
            "18\n",
            "21\n",
            "24\n",
            "27\n",
            "30\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 7. Contar Números Negativos\n",
        "# Dada uma lista de números, conte e exiba quantos são negativos.\n",
        "\n",
        "numeros_neg = [0, 9, -1, -7, 3, 5, -10, -13, 20]\n",
        "contagem_negativos = 0\n",
        "\n",
        "for n in numeros_neg:\n",
        "    if n < 0:\n",
        "        contagem_negativos += 1\n",
        "\n",
        "print(\"Quantidade de números negativos:\", contagem_negativos)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ERsQhXV5i-4C",
        "outputId": "a8ae755f-f4f9-49ed-ad01-1e06568be2d8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Quantidade de números negativos: 4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 8. Pirâmide de Asteriscos\n",
        "# Peça ao usuário um número e exiba um triângulo de asteriscos com essa altura.\n",
        "\n",
        "piramide = int(input(\"Digite um número para altura do triângulo: \"))\n",
        "\n",
        "for i in range(1, piramide + 1):\n",
        "    print(\"*\" * i)"
      ],
      "metadata": {
        "id": "7rwNWMi3l875",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "183233b6-79aa-402c-9b2a-a640baf5267c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número para altura do triângulo: 8\n",
            "*\n",
            "**\n",
            "***\n",
            "****\n",
            "*****\n",
            "******\n",
            "*******\n",
            "********\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 9. Contagem Regressiva\n",
        "# Exiba uma contagem regressiva de 10 a 1, seguida da mensagem \"FIM!\"\n",
        "\n",
        "for i in range (10, 0, -1):\n",
        "  print(i)\n",
        "print(\"FIM!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ftfz24QpmnWZ",
        "outputId": "29cc5052-5cb7-450a-9fcd-31ac4c402bdb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10\n",
            "9\n",
            "8\n",
            "7\n",
            "6\n",
            "5\n",
            "4\n",
            "3\n",
            "2\n",
            "1\n",
            "FIM!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 10. Substituir Negativos\n",
        "# Dada uma lista de números, substitua os números negativos por zero e exiba a nova lista.\n",
        "\n",
        "lista = [9, -1, -7, 3, 5, -10, -13, 20]\n",
        "\n",
        "for i in lista:\n",
        "       if i < 0:\n",
        "        i = 0\n",
        "       print(i)"
      ],
      "metadata": {
        "id": "n7WJ_tL7nUOe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f60aa178-8fd6-4721-c775-5ef3018915c6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9\n",
            "0\n",
            "0\n",
            "3\n",
            "5\n",
            "0\n",
            "0\n",
            "20\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 11. Criar uma Sequência Numérica\n",
        "#Solicite ao usuário um número e exiba os 10 primeiros múltiplos desse número.\n",
        "\n",
        "num_5 = int(input(\"Digite um número: \"))\n",
        "\n",
        "for k in range (1,11):\n",
        " print(f\"{num_5} x {k} = {num_5*k}\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BY9DODkUvjGr",
        "outputId": "c0f8fc9a-909e-4650-fb7f-7f467bebd131"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 4\n",
            "4 x 1 = 4\n",
            "4 x 2 = 8\n",
            "4 x 3 = 12\n",
            "4 x 4 = 16\n",
            "4 x 5 = 20\n",
            "4 x 6 = 24\n",
            "4 x 7 = 28\n",
            "4 x 8 = 32\n",
            "4 x 9 = 36\n",
            "4 x 10 = 40\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 12. Contar Vogais\n",
        "# Peça ao usuário para digitar uma palavra e exiba quantas vogais ela contém.\n",
        "\n",
        "palavras = input(\"Digite uma palavra: \").lower().strip()\n",
        "vogais = \"aeiou\"\n",
        "\n",
        "contador = 0\n",
        "\n",
        "for letra in palavras:\n",
        "    if letra in vogais:\n",
        "        contador += 1\n",
        "\n",
        "print(f\"A palavra contém {contador} vogais.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K6H4jbKIw2tc",
        "outputId": "54752f8d-60f9-4241-89b0-66ff8be0b59e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite uma palavra: casa\n",
            "A palavra contém 2 vogais.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 13. Divisíveis por 5\n",
        "# Mostre todos os números divisíveis por 5 no intervalo de 1 a 50.\n",
        "\n",
        "for i in range (5,51,5):\n",
        "     print(i)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8TbQPNli6vAc",
        "outputId": "8bf604c1-f719-4b1e-a4b4-abeee870f9fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n",
            "10\n",
            "15\n",
            "20\n",
            "25\n",
            "30\n",
            "35\n",
            "40\n",
            "45\n",
            "50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 14. Contar Números Pares em uma Lista\n",
        "# Dada uma lista de números, conte e exiba quantos são pares.\n",
        "\n",
        "num6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
        "contador = 0\n",
        "\n",
        "for i in num6:\n",
        "    if i % 2 == 0:\n",
        "        contador += 1\n",
        "\n",
        "print(f\"Quantidade de números pares:\", {contador})"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kQO5ygEl8SlJ",
        "outputId": "a35e0bd8-a7c7-4090-91c1-cc4f654be2d6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Quantidade de números pares: {5}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 15. Inverter uma Palavra\n",
        "# Peça ao usuário para digitar uma palavra e exiba essa palavra invertida.\n",
        "\n",
        "palavra = input (\"Digite uma palavra: \").lower().strip()\n",
        "\n",
        "for i in palavra[::-1]:\n",
        "  print(i)\n"
      ],
      "metadata": {
        "id": "m7e775Nt-1Q2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a5bc9f4b-01ce-4a74-861d-9ddc31dc2c23"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite uma palavra: vela\n",
            "a\n",
            "l\n",
            "e\n",
            "v\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 16. Exibir Números Ímpares\n",
        "# Mostre todos os números ímpares de 1 a 20.\n",
        "\n",
        "for i in range (1,21):\n",
        "  if i % 2 != 0:\n",
        "    print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "thEyf2xb_OA3",
        "outputId": "a66e7528-f697-44cd-e598-c6c1652c2625"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "3\n",
            "5\n",
            "7\n",
            "9\n",
            "11\n",
            "13\n",
            "15\n",
            "17\n",
            "19\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 17. Criar um Triângulo Numérico\n",
        "# Solicite um número ao usuário e exiba um triângulo numérico crescente.\n",
        "\n",
        "n = int(input(\"Digite um número:\"))\n",
        "\n",
        "for i in range (1, n +1):\n",
        "  print(str(i) * i)\n"
      ],
      "metadata": {
        "id": "X9TUaeFQ_fOP",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a9e9efd9-48c5-427c-b9a4-5e74cdcabd27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número:8\n",
            "1\n",
            "22\n",
            "333\n",
            "4444\n",
            "55555\n",
            "666666\n",
            "7777777\n",
            "88888888\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 18. Calcular o Fatorial\n",
        "# Peça para o usuário digitar um número e exiba o fatorial desse número.\n",
        "\n",
        "num = int(input(\"Digite um número: \"))\n",
        "fatorial = 1\n",
        "\n",
        "for i in range(1, num + 1):\n",
        "    fatorial *=i\n",
        "    print(fatorial)"
      ],
      "metadata": {
        "id": "4945M2dV_xeB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1b1a1cd3-d490-4594-84e1-f7f90f8e2704"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número: 5\n",
            "1\n",
            "2\n",
            "6\n",
            "24\n",
            "120\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 19. Contar uma Letra em uma Frase\n",
        "# Solicite uma frase e uma letra ao usuário e exiba quantas vezes essa letra aparece na frase.\n",
        "\n",
        "frase = input(\"Digite uma frase: \")\n",
        "letra = input(\"Digite uma letra: \")\n",
        "\n",
        "contador = 0\n",
        "\n",
        "for i in frase:\n",
        "  if i == letra:\n",
        "    contador += 1\n",
        "\n",
        "print(f\"A letra '{letra}' aparece {contador} vezes na frase.\")"
      ],
      "metadata": {
        "id": "TLTBCh_h_0CD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d32e7de2-556b-4dcd-aa15-be9ccd3ad5e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite uma frase: o dia está bonito e ensolarado\n",
            "Digite uma letra: o\n",
            "A letra 'o' aparece 5 vezes na frase.\n"
          ]
        }
      ]
    }
  ]
}